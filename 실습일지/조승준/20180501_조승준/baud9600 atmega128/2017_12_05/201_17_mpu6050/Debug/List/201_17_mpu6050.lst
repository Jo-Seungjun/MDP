
AVRASM ver. 2.1.30  C:\_CodeVision\2017_12_05\201_17_mpu6050\Debug\List\201_17_mpu6050.asm Tue Dec 05 15:50:27 2017

C:\_CodeVision\2017_12_05\201_17_mpu6050\Debug\List\201_17_mpu6050.asm(1097): warning: Register r5 already defined by the .DEF directive
C:\_CodeVision\2017_12_05\201_17_mpu6050\Debug\List\201_17_mpu6050.asm(1098): warning: Register r4 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.29 Evaluation
                 ;(C) Copyright 1998-2016 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega128
                 ;Program type           : Application
                 ;Clock frequency        : 16.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 1024 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4096
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _i=R5
                 	.DEF _j=R4
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0077 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0150 	JMP  _usart0_rx_isr
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0153 	JMP  _usart1_rx_isr
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
000046 2710
000047 03e8
000048 0064
000049 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00004a 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00004b 1000
00004c 0100
00004d 0010
00004e 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x35:
00004f 3c3b
000050 3e3d
000051 403f
000052 4241      	.DB  0x3B,0x3C,0x3D,0x3E,0x3F,0x40,0x41,0x42
000053 4443
000054 4645
000055 4847      	.DB  0x43,0x44,0x45,0x46,0x47,0x48
                 _0x0:
000056 0a0d
000057 706d
000058 3675
000059 3530      	.DB  0xD,0xA,0x6D,0x70,0x75,0x36,0x30,0x35
00005a 2030
00005b 6574
00005c 706d
00005d 253d      	.DB  0x30,0x20,0x74,0x65,0x6D,0x70,0x3D,0x25
00005e 6364
00005f 612c
000060 3d78
000061 6425      	.DB  0x64,0x63,0x2C,0x61,0x78,0x3D,0x25,0x64
000062 612c
000063 3d79
000064 6425
000065 612c      	.DB  0x2C,0x61,0x79,0x3D,0x25,0x64,0x2C,0x61
000066 3d7a
000067 6425
000068 672c
000069 3d78      	.DB  0x7A,0x3D,0x25,0x64,0x2C,0x67,0x78,0x3D
00006a 6425
00006b 672c
00006c 3d79
00006d 6425      	.DB  0x25,0x64,0x2C,0x67,0x79,0x3D,0x25,0x64
00006e 672c
00006f 3d7a
000070 6425
000071 0a0d      	.DB  0x2C,0x67,0x7A,0x3D,0x25,0x64,0xD,0xA
C:\_CodeVision\2017_12_05\201_17_mpu6050\Debug\List\201_17_mpu6050.asm(1160): warning: .cseg .db misalignment - padding zero byte
000072 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000073 000e      	.DW  0x0E
000074 0512      	.DW  _mpu_addr
000075 009e      	.DW  _0x35*2
                 
                 _0xFFFFFFFF:
000076 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000077 94f8      	CLI
000078 27ee      	CLR  R30
000079 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00007a e0f1      	LDI  R31,1
00007b bff5      	OUT  MCUCR,R31
00007c bfe5      	OUT  MCUCR,R30
00007d 93e0 006c 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
00007f e08d      	LDI  R24,(14-2)+1
000080 e0a2      	LDI  R26,2
000081 27bb      	CLR  R27
                 __CLEAR_REG:
000082 93ed      	ST   X+,R30
000083 958a      	DEC  R24
000084 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000085 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000086 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000087 e0a0      	LDI  R26,LOW(__SRAM_START)
000088 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000089 93ed      	ST   X+,R30
00008a 9701      	SBIW R24,1
00008b f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00008c eee6      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00008d e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00008e 9185      	LPM  R24,Z+
00008f 9195      	LPM  R25,Z+
000090 9700      	SBIW R24,0
000091 f061      	BREQ __GLOBAL_INI_END
000092 91a5      	LPM  R26,Z+
000093 91b5      	LPM  R27,Z+
000094 9005      	LPM  R0,Z+
000095 9015      	LPM  R1,Z+
000096 01bf      	MOVW R22,R30
000097 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000098 9005      	LPM  R0,Z+
000099 920d      	ST   X+,R0
00009a 9701      	SBIW R24,1
00009b f7e1      	BRNE __GLOBAL_INI_LOOP
00009c 01fb      	MOVW R30,R22
00009d cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
00009e bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00009f efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000a0 bfed      	OUT  SPL,R30
0000a1 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000a2 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000a3 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000a4 e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000a5 940c 01db 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include "intech_twi.h"
                 
                 	.CSEG
                 _mpu6050_read:
                 ; .FSTART _mpu6050_read
0000a7 d3b3      	RCALL __SAVELOCR4
0000a8 2f0a      	MOV  R16,R26
0000a9 813c      	LDD  R19,Y+4
                 ;	twi -> R19
                 ;	addr -> R16
                 ;	twi_dat -> R17
0000aa eae4      	LDI  R30,LOW(164)
0000ab 93e0 0074 	STS  116,R30
                 _0x3:
0000ad 91e0 0074 	LDS  R30,116
0000af 78e0      	ANDI R30,LOW(0x80)
0000b0 f011      	BREQ _0x6
0000b1 d357      	RCALL SUBOPT_0x0
0000b2 f009      	BREQ _0x5
                 _0x6:
0000b3 cff9      	RJMP _0x3
                 _0x5:
0000b4 d359      	RCALL SUBOPT_0x1
                 _0x8:
0000b5 91e0 0074 	LDS  R30,116
0000b7 78e0      	ANDI R30,LOW(0x80)
0000b8 f011      	BREQ _0xB
0000b9 d35e      	RCALL SUBOPT_0x2
0000ba f009      	BREQ _0xA
                 _0xB:
0000bb cff9      	RJMP _0x8
                 _0xA:
0000bc d360      	RCALL SUBOPT_0x3
                 _0xD:
0000bd 91e0 0074 	LDS  R30,116
0000bf 78e0      	ANDI R30,LOW(0x80)
0000c0 f011      	BREQ _0x10
0000c1 d363      	RCALL SUBOPT_0x4
0000c2 f009      	BREQ _0xF
                 _0x10:
0000c3 cff9      	RJMP _0xD
                 _0xF:
0000c4 eae4      	LDI  R30,LOW(164)
0000c5 93e0 0074 	STS  116,R30
                 _0x12:
0000c7 91e0 0074 	LDS  R30,116
0000c9 78e0      	ANDI R30,LOW(0x80)
0000ca f029      	BREQ _0x15
0000cb 91e0 0071 	LDS  R30,113
0000cd 7fe8      	ANDI R30,LOW(0xF8)
0000ce 31e0      	CPI  R30,LOW(0x10)
0000cf f009      	BREQ _0x14
                 _0x15:
0000d0 cff6      	RJMP _0x12
                 _0x14:
0000d1 2fe3      	MOV  R30,R19
0000d2 0fee      	LSL  R30
0000d3 5fef      	SUBI R30,-LOW(1)
0000d4 93e0 0073 	STS  115,R30
0000d6 d353      	RCALL SUBOPT_0x5
                 _0x17:
0000d7 91e0 0074 	LDS  R30,116
0000d9 78e0      	ANDI R30,LOW(0x80)
0000da f029      	BREQ _0x1A
0000db 91e0 0071 	LDS  R30,113
0000dd 7fe8      	ANDI R30,LOW(0xF8)
0000de 34e0      	CPI  R30,LOW(0x40)
0000df f009      	BREQ _0x19
                 _0x1A:
0000e0 cff6      	RJMP _0x17
                 _0x19:
0000e1 d348      	RCALL SUBOPT_0x5
                 _0x1C:
0000e2 91e0 0074 	LDS  R30,116
0000e4 78e0      	ANDI R30,LOW(0x80)
0000e5 f029      	BREQ _0x1F
0000e6 91e0 0071 	LDS  R30,113
0000e8 7fe8      	ANDI R30,LOW(0xF8)
0000e9 35e8      	CPI  R30,LOW(0x58)
0000ea f009      	BREQ _0x1E
                 _0x1F:
0000eb cff6      	RJMP _0x1C
                 _0x1E:
0000ec 9110 0073 	LDS  R17,115
0000ee e9e4      	LDI  R30,LOW(148)
0000ef 93e0 0074 	STS  116,R30
                +
0000f1 e385     +LDI R24 , LOW ( 53 )
                +__DELAY_USB_LOOP :
0000f2 958a     +DEC R24
0000f3 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 53
0000f4 2fe1      	MOV  R30,R17
0000f5 d36c      	RCALL __LOADLOCR4
0000f6 9625      	ADIW R28,5
0000f7 9508      	RET
                 ; .FEND
                 _mpu6050_write:
                 ; .FSTART _mpu6050_write
0000f8 d362      	RCALL __SAVELOCR4
0000f9 2f1a      	MOV  R17,R26
0000fa 810c      	LDD  R16,Y+4
0000fb 813d      	LDD  R19,Y+5
                 ;	twi -> R19
                 ;	addr -> R16
                 ;	data -> R17
0000fc eae4      	LDI  R30,LOW(164)
0000fd 93e0 0074 	STS  116,R30
                 _0x21:
0000ff 91e0 0074 	LDS  R30,116
000101 78e0      	ANDI R30,LOW(0x80)
000102 f011      	BREQ _0x24
000103 d305      	RCALL SUBOPT_0x0
000104 f009      	BREQ _0x23
                 _0x24:
000105 cff9      	RJMP _0x21
                 _0x23:
000106 d307      	RCALL SUBOPT_0x1
                 _0x26:
000107 91e0 0074 	LDS  R30,116
000109 78e0      	ANDI R30,LOW(0x80)
00010a f011      	BREQ _0x29
00010b d30c      	RCALL SUBOPT_0x2
00010c f009      	BREQ _0x28
                 _0x29:
00010d cff9      	RJMP _0x26
                 _0x28:
00010e d30e      	RCALL SUBOPT_0x3
                 _0x2B:
00010f 91e0 0074 	LDS  R30,116
000111 78e0      	ANDI R30,LOW(0x80)
000112 f011      	BREQ _0x2E
000113 d311      	RCALL SUBOPT_0x4
000114 f009      	BREQ _0x2D
                 _0x2E:
000115 cff9      	RJMP _0x2B
                 _0x2D:
000116 9310 0073 	STS  115,R17
000118 d311      	RCALL SUBOPT_0x5
                 _0x30:
000119 91e0 0074 	LDS  R30,116
00011b 78e0      	ANDI R30,LOW(0x80)
00011c f011      	BREQ _0x33
00011d d307      	RCALL SUBOPT_0x4
00011e f009      	BREQ _0x32
                 _0x33:
00011f cff9      	RJMP _0x30
                 _0x32:
000120 e9e4      	LDI  R30,LOW(148)
000121 93e0 0074 	STS  116,R30
                +
000123 ec88     +LDI R24 , LOW ( 200 )
000124 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000125 9701     +SBIW R24 , 1
000126 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000127 c025      	RJMP _0x2060002
                 ; .FEND
                 ;
                 ;volatile int dtemp;
                 ;
                 ;unsigned char sbuf[16];
                 ;unsigned char i,j;
                 ;
                 ;char mpu_addr[] = {0x3b, 0x3c, 0x3d, 0x3e, 0x3f, 0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48};
                 
                 	.DSEG
                 ;
                 ;volatile char mpu6050_buf[14] = {0,};
                 ;
                 ;struct m6050
                 ;{
                 ;    volatile int ax;
                 ;    volatile int ay;
                 ;    volatile int az;
                 ;
                 ;    volatile int temp;
                 ;
                 ;    volatile int gx;
                 ;    volatile int gy;
                 ;    volatile int gz;
                 ;}mpu6050;
                 ;
                 ;void tx_trans(int tx_port, char data)
                 ; 0000 001D {
                 
                 	.CSEG
                 _tx_trans:
                 ; .FSTART _tx_trans
                 ; 0000 001E     switch(tx_port)
000128 d332      	RCALL __SAVELOCR4
000129 2f1a      	MOV  R17,R26
                +
00012a 812c     +LDD R18 , Y + 4
00012b 813d     +LDD R19 , Y + 4 + 1
                 	__GETWRS 18,19,4
                 ;	tx_port -> R18,R19
                 ;	data -> R17
00012c 01f9      	MOVW R30,R18
                 ; 0000 001F     {
                 ; 0000 0020         case 0:
00012d 9730      	SBIW R30,0
00012e f421      	BRNE _0x39
                 ; 0000 0021             while(!(UCSR0A & 0x20));
                 _0x3A:
00012f 9b5d      	SBIS 0xB,5
000130 cffe      	RJMP _0x3A
                 ; 0000 0022 
                 ; 0000 0023             UDR0 = data;
000131 b91c      	OUT  0xC,R17
                 ; 0000 0024             break;
000132 c00a      	RJMP _0x38
                 ; 0000 0025         case 1:
                 _0x39:
000133 30e1      	CPI  R30,LOW(0x1)
000134 e0a0      	LDI  R26,HIGH(0x1)
000135 07fa      	CPC  R31,R26
000136 f431      	BRNE _0x41
                 ; 0000 0026             while(!(UCSR1A & 0x20));
                 _0x3E:
000137 91e0 009b 	LDS  R30,155
000139 72e0      	ANDI R30,LOW(0x20)
00013a f3e1      	BREQ _0x3E
                 ; 0000 0027 
                 ; 0000 0028             UDR1 = data;
00013b 9310 009c 	STS  156,R17
                 ; 0000 0029             break;
                 ; 0000 002A         default:
                 _0x41:
                 ; 0000 002B             break;
                 ; 0000 002C     }
                 _0x38:
                 ; 0000 002D }
00013d c00f      	RJMP _0x2060002
                 ; .FEND
                 ;
                 ;void tx_str_trans(int tx_port, unsigned char *tx_str)
                 ; 0000 0030 {
                 _tx_str_trans:
                 ; .FSTART _tx_str_trans
                 ; 0000 0031     while(*tx_str != '\0')
00013e d31c      	RCALL __SAVELOCR4
00013f 018d      	MOVW R16,R26
                +
000140 812c     +LDD R18 , Y + 4
000141 813d     +LDD R19 , Y + 4 + 1
                 	__GETWRS 18,19,4
                 ;	tx_port -> R18,R19
                 ;	*tx_str -> R16,R17
                 _0x42:
000142 01d8      	MOVW R26,R16
000143 91ec      	LD   R30,X
000144 30e0      	CPI  R30,0
000145 f039      	BREQ _0x44
                 ; 0000 0032     {
                 ; 0000 0033         tx_trans(tx_port, *tx_str);
000146 933a      	ST   -Y,R19
000147 932a      	ST   -Y,R18
000148 91ac      	LD   R26,X
000149 dfde      	RCALL _tx_trans
                 ; 0000 0034         tx_str++;
                +
00014a 5f0f     +SUBI R16 , LOW ( - 1 )
00014b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 0035     }
00014c cff5      	RJMP _0x42
                 _0x44:
                 ; 0000 0036 }
                 _0x2060002:
00014d d314      	RCALL __LOADLOCR4
00014e 9626      	ADIW R28,6
00014f 9508      	RET
                 ; .FEND
                 ;
                 ;interrupt [USART0_RXC] void usart0_rx_isr(void)
                 ; 0000 0039 {
                 _usart0_rx_isr:
                 ; .FSTART _usart0_rx_isr
                 ; 0000 003A     char data;
                 ; 0000 003B     data = UDR0;
000150 931a      	ST   -Y,R17
                 ;	data -> R17
000151 b11c      	IN   R17,12
                 ; 0000 003C }
000152 c003      	RJMP _0x6E
                 ; .FEND
                 ;
                 ;interrupt [USART1_RXC] void usart1_rx_isr(void)
                 ; 0000 003F {
                 _usart1_rx_isr:
                 ; .FSTART _usart1_rx_isr
                 ; 0000 0040     char data;
                 ; 0000 0041     data = UDR1;
000153 931a      	ST   -Y,R17
                 ;	data -> R17
000154 9110 009c 	LDS  R17,156
                 ; 0000 0042 }
                 _0x6E:
000156 9119      	LD   R17,Y+
000157 9518      	RETI
                 ; .FEND
                 ;
                 ;void getraw_mpu6050(void)
                 ; 0000 0045 {
                 _getraw_mpu6050:
                 ; .FSTART _getraw_mpu6050
                 ; 0000 0046     for(i=0;i<14;i++)
000158 2455      	CLR  R5
                 _0x46:
000159 e0ee      	LDI  R30,LOW(14)
00015a 165e      	CP   R5,R30
00015b f498      	BRSH _0x47
                 ; 0000 0047     {
                 ; 0000 0048         mpu6050_buf[i] = mpu6050_read(0x68, mpu_addr[i]);
00015c 2de5      	MOV  R30,R5
00015d e0f0      	LDI  R31,0
00015e 5ee0      	SUBI R30,LOW(-_mpu6050_buf)
00015f 4ffa      	SBCI R31,HIGH(-_mpu6050_buf)
000160 93ff      	PUSH R31
000161 93ef      	PUSH R30
000162 e6e8      	LDI  R30,LOW(104)
000163 93ea      	ST   -Y,R30
000164 2de5      	MOV  R30,R5
000165 e0f0      	LDI  R31,0
000166 5eee      	SUBI R30,LOW(-_mpu_addr)
000167 4ffa      	SBCI R31,HIGH(-_mpu_addr)
000168 81a0      	LD   R26,Z
000169 df3d      	RCALL _mpu6050_read
00016a 91af      	POP  R26
00016b 91bf      	POP  R27
00016c 93ec      	ST   X,R30
                 ; 0000 0049     }
00016d 9453      	INC  R5
00016e cfea      	RJMP _0x46
                 _0x47:
                 ; 0000 004A 
                 ; 0000 004B     mpu6050.ax = (int)mpu6050_buf[0] << 8 | (int)mpu6050_buf[1];
00016f 91b0 0520 	LDS  R27,_mpu6050_buf
000171 e0a0      	LDI  R26,LOW(0)
                +
000172 91e0 0521+LDS R30 , _mpu6050_buf + ( 1 )
                 	__GETB1MN _mpu6050_buf,1
000174 e0f0      	LDI  R31,0
000175 2bea      	OR   R30,R26
000176 2bfb      	OR   R31,R27
000177 93e0 052e 	STS  _mpu6050,R30
000179 93f0 052f 	STS  _mpu6050+1,R31
                 ; 0000 004C     mpu6050.ay = (int)mpu6050_buf[2] << 8 | (int)mpu6050_buf[3];
                +
00017b 91b0 0522+LDS R27 , _mpu6050_buf + ( 2 )
                 	__GETBRMN 27,_mpu6050_buf,2
00017d e0a0      	LDI  R26,LOW(0)
                +
00017e 91e0 0523+LDS R30 , _mpu6050_buf + ( 3 )
                 	__GETB1MN _mpu6050_buf,3
000180 e0f0      	LDI  R31,0
000181 2bea      	OR   R30,R26
000182 2bfb      	OR   R31,R27
                +
000183 93e0 0530+STS _mpu6050 + ( 2 ) , R30
000185 93f0 0531+STS _mpu6050 + ( 2 ) + 1 , R31
                 	__PUTW1MN _mpu6050,2
                 ; 0000 004D     mpu6050.az = (int)mpu6050_buf[4] << 8 | (int)mpu6050_buf[5];
                +
000187 91b0 0524+LDS R27 , _mpu6050_buf + ( 4 )
                 	__GETBRMN 27,_mpu6050_buf,4
000189 e0a0      	LDI  R26,LOW(0)
                +
00018a 91e0 0525+LDS R30 , _mpu6050_buf + ( 5 )
                 	__GETB1MN _mpu6050_buf,5
00018c e0f0      	LDI  R31,0
00018d 2bea      	OR   R30,R26
00018e 2bfb      	OR   R31,R27
                +
00018f 93e0 0532+STS _mpu6050 + ( 4 ) , R30
000191 93f0 0533+STS _mpu6050 + ( 4 ) + 1 , R31
                 	__PUTW1MN _mpu6050,4
                 ; 0000 004E 
                 ; 0000 004F     dtemp = (int)mpu6050_buf[6] << 8 | (int)mpu6050_buf[7];
                +
000193 91b0 0526+LDS R27 , _mpu6050_buf + ( 6 )
                 	__GETBRMN 27,_mpu6050_buf,6
000195 e0a0      	LDI  R26,LOW(0)
                +
000196 91e0 0527+LDS R30 , _mpu6050_buf + ( 7 )
                 	__GETB1MN _mpu6050_buf,7
000198 e0f0      	LDI  R31,0
000199 2bea      	OR   R30,R26
00019a 2bfb      	OR   R31,R27
00019b 93e0 0500 	STS  _dtemp,R30
00019d 93f0 0501 	STS  _dtemp+1,R31
                 ; 0000 0050     mpu6050.temp = ((float)dtemp + 12412.0) / 340.0;
00019f 91e0 0500 	LDS  R30,_dtemp
0001a1 91f0 0501 	LDS  R31,_dtemp+1
0001a3 d2d7      	RCALL __CWD1
0001a4 d352      	RCALL __CDF1
                +
0001a5 e0a0     +LDI R26 , LOW ( 0x4641F000 )
0001a6 efb0     +LDI R27 , HIGH ( 0x4641F000 )
0001a7 e481     +LDI R24 , BYTE3 ( 0x4641F000 )
0001a8 e496     +LDI R25 , BYTE4 ( 0x4641F000 )
                 	__GETD2N 0x4641F000
0001a9 d380      	RCALL __ADDF12
0001aa 01df      	MOVW R26,R30
0001ab 01cb      	MOVW R24,R22
                +
0001ac e0e0     +LDI R30 , LOW ( 0x43AA0000 )
0001ad e0f0     +LDI R31 , HIGH ( 0x43AA0000 )
0001ae ea6a     +LDI R22 , BYTE3 ( 0x43AA0000 )
0001af e473     +LDI R23 , BYTE4 ( 0x43AA0000 )
                 	__GETD1N 0x43AA0000
0001b0 d3c8      	RCALL __DIVF21
                +
0001b1 e3a4     +LDI R26 , LOW ( _mpu6050 + ( 6 ) )
0001b2 e0b5     +LDI R27 , HIGH ( _mpu6050 + ( 6 ) )
                 	__POINTW2MN _mpu6050,6
0001b3 d30c      	RCALL __CFD1
0001b4 93ed      	ST   X+,R30
0001b5 93fc      	ST   X,R31
                 ; 0000 0051 
                 ; 0000 0052     mpu6050.gx = (int)mpu6050_buf[8] << 8 | (int)mpu6050_buf[9];
                +
0001b6 91b0 0528+LDS R27 , _mpu6050_buf + ( 8 )
                 	__GETBRMN 27,_mpu6050_buf,8
0001b8 e0a0      	LDI  R26,LOW(0)
                +
0001b9 91e0 0529+LDS R30 , _mpu6050_buf + ( 9 )
                 	__GETB1MN _mpu6050_buf,9
0001bb e0f0      	LDI  R31,0
0001bc 2bea      	OR   R30,R26
0001bd 2bfb      	OR   R31,R27
                +
0001be 93e0 0536+STS _mpu6050 + ( 8 ) , R30
0001c0 93f0 0537+STS _mpu6050 + ( 8 ) + 1 , R31
                 	__PUTW1MN _mpu6050,8
                 ; 0000 0053     mpu6050.gy = (int)mpu6050_buf[10] << 8 | (int)mpu6050_buf[11];
                +
0001c2 91b0 052a+LDS R27 , _mpu6050_buf + ( 10 )
                 	__GETBRMN 27,_mpu6050_buf,10
0001c4 e0a0      	LDI  R26,LOW(0)
                +
0001c5 91e0 052b+LDS R30 , _mpu6050_buf + ( 11 )
                 	__GETB1MN _mpu6050_buf,11
0001c7 e0f0      	LDI  R31,0
0001c8 2bea      	OR   R30,R26
0001c9 2bfb      	OR   R31,R27
                +
0001ca 93e0 0538+STS _mpu6050 + ( 10 ) , R30
0001cc 93f0 0539+STS _mpu6050 + ( 10 ) + 1 , R31
                 	__PUTW1MN _mpu6050,10
                 ; 0000 0054     mpu6050.gz = (int)mpu6050_buf[12] << 8 | (int)mpu6050_buf[13];
                +
0001ce 91b0 052c+LDS R27 , _mpu6050_buf + ( 12 )
                 	__GETBRMN 27,_mpu6050_buf,12
0001d0 e0a0      	LDI  R26,LOW(0)
                +
0001d1 91e0 052d+LDS R30 , _mpu6050_buf + ( 13 )
                 	__GETB1MN _mpu6050_buf,13
0001d3 e0f0      	LDI  R31,0
0001d4 2bea      	OR   R30,R26
0001d5 2bfb      	OR   R31,R27
                +
0001d6 93e0 053a+STS _mpu6050 + ( 12 ) , R30
0001d8 93f0 053b+STS _mpu6050 + ( 12 ) + 1 , R31
                 	__PUTW1MN _mpu6050,12
                 ; 0000 0055 }
0001da 9508      	RET
                 ; .FEND
                 ;
                 ;void main()
                 ; 0000 0058 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0059     DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
0001db eee0      	LDI  R30,LOW(224)
0001dc bbe7      	OUT  0x17,R30
                 ; 0000 005A     PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
0001dd e0e0      	LDI  R30,LOW(0)
0001de bbe8      	OUT  0x18,R30
                 ; 0000 005B 
                 ; 0000 005C     DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
0001df bbe1      	OUT  0x11,R30
                 ; 0000 005D     PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
0001e0 bbe2      	OUT  0x12,R30
                 ; 0000 005E 
                 ; 0000 005F     DDRE=(0<<DDE7) | (0<<DDE6) | (1<<DDE5) | (1<<DDE4) | (1<<DDE3) | (0<<DDE2) | (0<<DDE1) | (0<<DDE0);
0001e1 e3e8      	LDI  R30,LOW(56)
0001e2 b9e2      	OUT  0x2,R30
                 ; 0000 0060     PORTE=(1<<PORTE7) | (1<<PORTE6) | (1<<PORTE5) | (1<<PORTE4) | (1<<PORTE3) | (0<<PORTE2) | (0<<PORTE1) | (0<<PORTE0);
0001e3 efe8      	LDI  R30,LOW(248)
0001e4 b9e3      	OUT  0x3,R30
                 ; 0000 0061 
                 ; 0000 0062     DDRC = 0xff;
0001e5 efef      	LDI  R30,LOW(255)
0001e6 bbe4      	OUT  0x14,R30
                 ; 0000 0063 
                 ; 0000 0064     UCSR0A=(0<<RXC0) | (0<<TXC0) | (0<<UDRE0) | (0<<FE0) | (0<<DOR0) | (0<<UPE0) | (0<<U2X0) | (0<<MPCM0);
0001e7 e0e0      	LDI  R30,LOW(0)
0001e8 b9eb      	OUT  0xB,R30
                 ; 0000 0065     UCSR0B=(1<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (1<<RXEN0) | (1<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
0001e9 e9e8      	LDI  R30,LOW(152)
0001ea b9ea      	OUT  0xA,R30
                 ; 0000 0066     UCSR0C=(0<<UMSEL0) | (0<<UPM01) | (0<<UPM00) | (0<<USBS0) | (1<<UCSZ01) | (1<<UCSZ00) | (0<<UCPOL0);
0001eb e0e6      	LDI  R30,LOW(6)
0001ec 93e0 0095 	STS  149,R30
                 ; 0000 0067     UBRR0H=0x00;
0001ee e0e0      	LDI  R30,LOW(0)
0001ef 93e0 0090 	STS  144,R30
                 ; 0000 0068     UBRR0L=0x67;
0001f1 e6e7      	LDI  R30,LOW(103)
0001f2 b9e9      	OUT  0x9,R30
                 ; 0000 0069 
                 ; 0000 006A     UCSR1B=(0<<RXCIE1) | (0<<TXCIE1) | (0<<UDRIE1) | (0<<RXEN1) | (0<<TXEN1) | (0<<UCSZ12) | (0<<RXB81) | (0<<TXB81);
0001f3 e0e0      	LDI  R30,LOW(0)
0001f4 93e0 009a 	STS  154,R30
                 ; 0000 006B 
                 ; 0000 006C     #asm("sei")
0001f6 9478      	SEI
                 ; 0000 006D 
                 ; 0000 006E     TWSR = 0x00;
0001f7 93e0 0071 	STS  113,R30
                 ; 0000 006F     TWBR = 0x12;
0001f9 e1e2      	LDI  R30,LOW(18)
0001fa 93e0 0070 	STS  112,R30
                 ; 0000 0070 
                 ; 0000 0071     mpu6050_write(0x68, 0x6B, 0x00);
0001fc e6e8      	LDI  R30,LOW(104)
0001fd 93ea      	ST   -Y,R30
0001fe e6eb      	LDI  R30,LOW(107)
0001ff d230      	RCALL SUBOPT_0x6
                 ; 0000 0072     mpu6050_write(0x68, 0x6C, 0x00);
000200 e6ec      	LDI  R30,LOW(108)
000201 d22e      	RCALL SUBOPT_0x6
                 ; 0000 0073 
                 ; 0000 0074     mpu6050_write(0x68, 0x1B, 0x10);
000202 e1eb      	LDI  R30,LOW(27)
000203 93ea      	ST   -Y,R30
000204 e1a0      	LDI  R26,LOW(16)
000205 def2      	RCALL _mpu6050_write
                 ; 0000 0075     mpu6050_write(0x68, 0x1C, 0x10);
000206 e6e8      	LDI  R30,LOW(104)
000207 93ea      	ST   -Y,R30
000208 e1ec      	LDI  R30,LOW(28)
000209 93ea      	ST   -Y,R30
00020a e1a0      	LDI  R26,LOW(16)
00020b deec      	RCALL _mpu6050_write
                 ; 0000 0076 
                 ; 0000 0077     getraw_mpu6050();
00020c df4b      	RCALL _getraw_mpu6050
                 ; 0000 0078 
                 ; 0000 0079     while(1)
                 _0x48:
                 ; 0000 007A     {
                 ; 0000 007B         getraw_mpu6050();
00020d df4a      	RCALL _getraw_mpu6050
                 ; 0000 007C 
                 ; 0000 007D         sprintf(sbuf,"\r\nmpu6050 temp=%dc,ax=%d,ay=%d,az=%d,gx=%d,gy=%d,gz=%d\r\n"
                 ; 0000 007E                 , mpu6050.temp, mpu6050.ax, mpu6050.ay, mpu6050.az, mpu6050.gx, mpu6050.gy, mpu6050.gz);
00020e e0e2      	LDI  R30,LOW(_sbuf)
00020f e0f5      	LDI  R31,HIGH(_sbuf)
000210 93fa      	ST   -Y,R31
000211 93ea      	ST   -Y,R30
                +
000212 eaec     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000213 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000214 93fa      	ST   -Y,R31
000215 93ea      	ST   -Y,R30
                +
000216 91e0 0534+LDS R30 , _mpu6050 + ( 6 )
000218 91f0 0535+LDS R31 , _mpu6050 + ( 6 ) + 1
                 	__GETW1MN _mpu6050,6
00021a d260      	RCALL __CWD1
00021b d26c      	RCALL __PUTPARD1
00021c 91e0 052e 	LDS  R30,_mpu6050
00021e 91f0 052f 	LDS  R31,_mpu6050+1
000220 d25a      	RCALL __CWD1
000221 d266      	RCALL __PUTPARD1
                +
000222 91e0 0530+LDS R30 , _mpu6050 + ( 2 )
000224 91f0 0531+LDS R31 , _mpu6050 + ( 2 ) + 1
                 	__GETW1MN _mpu6050,2
000226 d254      	RCALL __CWD1
000227 d260      	RCALL __PUTPARD1
                +
000228 91e0 0532+LDS R30 , _mpu6050 + ( 4 )
00022a 91f0 0533+LDS R31 , _mpu6050 + ( 4 ) + 1
                 	__GETW1MN _mpu6050,4
00022c d24e      	RCALL __CWD1
00022d d25a      	RCALL __PUTPARD1
                +
00022e 91e0 0536+LDS R30 , _mpu6050 + ( 8 )
000230 91f0 0537+LDS R31 , _mpu6050 + ( 8 ) + 1
                 	__GETW1MN _mpu6050,8
000232 d248      	RCALL __CWD1
000233 d254      	RCALL __PUTPARD1
                +
000234 91e0 0538+LDS R30 , _mpu6050 + ( 10 )
000236 91f0 0539+LDS R31 , _mpu6050 + ( 10 ) + 1
                 	__GETW1MN _mpu6050,10
000238 d242      	RCALL __CWD1
000239 d24e      	RCALL __PUTPARD1
                +
00023a 91e0 053a+LDS R30 , _mpu6050 + ( 12 )
00023c 91f0 053b+LDS R31 , _mpu6050 + ( 12 ) + 1
                 	__GETW1MN _mpu6050,12
00023e d23c      	RCALL __CWD1
00023f d248      	RCALL __PUTPARD1
000240 e18c      	LDI  R24,28
000241 d17d      	RCALL _sprintf
000242 96a0      	ADIW R28,32
                 ; 0000 007F         tx_str_trans(0,sbuf);
000243 e0e0      	LDI  R30,LOW(0)
000244 e0f0      	LDI  R31,HIGH(0)
000245 93fa      	ST   -Y,R31
000246 93ea      	ST   -Y,R30
000247 e0a2      	LDI  R26,LOW(_sbuf)
000248 e0b5      	LDI  R27,HIGH(_sbuf)
000249 def4      	RCALL _tx_str_trans
                 ; 0000 0080 
                 ; 0000 0081 
                 ; 0000 0082         if(mpu6050.gx > 0){
                +
00024a 91a0 0536+LDS R26 , _mpu6050 + ( 8 )
00024c 91b0 0537+LDS R27 , _mpu6050 + ( 8 ) + 1
                 	__GETW2MN _mpu6050,8
00024e d23e      	RCALL __CPW02
00024f f414      	BRGE _0x4B
                 ; 0000 0083             PORTC.0 = 1;
000250 9aa8      	SBI  0x15,0
                 ; 0000 0084             PORTC.1 = 0;
000251 c008      	RJMP _0x6C
                 ; 0000 0085         }else if(mpu6050.gx < 0){
                 _0x4B:
                +
000252 91a0 0537+LDS R26 , _mpu6050 + ( 9 )
                 	__GETB2MN _mpu6050,9
000254 23aa      	TST  R26
000255 f41a      	BRPL _0x51
                 ; 0000 0086             PORTC.0 = 0;
000256 98a8      	CBI  0x15,0
                 ; 0000 0087             PORTC.1 = 1;
000257 9aa9      	SBI  0x15,1
                 ; 0000 0088         }else{
000258 c002      	RJMP _0x56
                 _0x51:
                 ; 0000 0089             PORTC.0 = 0;
000259 98a8      	CBI  0x15,0
                 ; 0000 008A             PORTC.1 = 0;
                 _0x6C:
00025a 98a9      	CBI  0x15,1
                 ; 0000 008B         }
                 _0x56:
                 ; 0000 008C 
                 ; 0000 008D         if(mpu6050.gy > 0){
                +
00025b 91a0 0538+LDS R26 , _mpu6050 + ( 10 )
00025d 91b0 0539+LDS R27 , _mpu6050 + ( 10 ) + 1
                 	__GETW2MN _mpu6050,10
00025f d22d      	RCALL __CPW02
000260 f414      	BRGE _0x5B
                 ; 0000 008E             PORTC.2 = 1;
000261 9aaa      	SBI  0x15,2
                 ; 0000 008F             PORTC.3 = 0;
000262 c008      	RJMP _0x6D
                 ; 0000 0090         }else if(mpu6050.gy < 0){
                 _0x5B:
                +
000263 91a0 0539+LDS R26 , _mpu6050 + ( 11 )
                 	__GETB2MN _mpu6050,11
000265 23aa      	TST  R26
000266 f41a      	BRPL _0x61
                 ; 0000 0091             PORTC.2 = 0;
000267 98aa      	CBI  0x15,2
                 ; 0000 0092             PORTC.3 = 1;
000268 9aab      	SBI  0x15,3
                 ; 0000 0093         }else{
000269 c002      	RJMP _0x66
                 _0x61:
                 ; 0000 0094             PORTC.2 = 0;
00026a 98aa      	CBI  0x15,2
                 ; 0000 0095             PORTC.3 = 0;
                 _0x6D:
00026b 98ab      	CBI  0x15,3
                 ; 0000 0096         }
                 _0x66:
                 ; 0000 0097     }
00026c cfa0      	RJMP _0x48
                 ; 0000 0098     delay_ms(500);
                 ; 0000 0099 }
                 _0x6B:
00026d cfff      	RJMP _0x6B
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
00026e d1ea      	RCALL __SAVELOCR6
00026f 019d      	MOVW R18,R26
000270 815e      	LDD  R21,Y+6
000271 9612      	ADIW R26,2
000272 d20d      	RCALL __GETW1P
000273 9730      	SBIW R30,0
000274 f0e1      	BREQ _0x2000010
000275 01d9      	MOVW R26,R18
000276 9614      	ADIW R26,4
000277 d208      	RCALL __GETW1P
000278 018f      	MOVW R16,R30
000279 9730      	SBIW R30,0
00027a f059      	BREQ _0x2000012
                +
00027b 3002     +CPI R16 , LOW ( 2 )
00027c e0e0     +LDI R30 , HIGH ( 2 )
00027d 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00027e f060      	BRLO _0x2000013
00027f 01f8      	MOVW R30,R16
000280 9731      	SBIW R30,1
000281 018f      	MOVW R16,R30
                +
000282 01d9     +MOVW R26 , R18
000283 9614     +ADIW R26 , 4
000284 93ed     +ST X + , R30
000285 93fc     +ST X , R31
                 	__PUTW1RNS 18,4
                 _0x2000012:
000286 01d9      	MOVW R26,R18
000287 9612      	ADIW R26,2
000288 d1ad      	RCALL SUBOPT_0x7
000289 9731      	SBIW R30,1
00028a 8350      	ST   Z,R21
                 _0x2000013:
00028b 01d9      	MOVW R26,R18
00028c d1f3      	RCALL __GETW1P
00028d 23ff      	TST  R31
00028e f00a      	BRMI _0x2000014
00028f d1a6      	RCALL SUBOPT_0x7
                 _0x2000014:
000290 c005      	RJMP _0x2000015
                 _0x2000010:
000291 01d9      	MOVW R26,R18
000292 efef      	LDI  R30,LOW(65535)
000293 efff      	LDI  R31,HIGH(65535)
000294 93ed      	ST   X+,R30
000295 93fc      	ST   X,R31
                 _0x2000015:
000296 d1c9      	RCALL __LOADLOCR6
000297 9627      	ADIW R28,7
000298 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
000299 93ba      	ST   -Y,R27
00029a 93aa      	ST   -Y,R26
00029b 9726      	SBIW R28,6
00029c d1bc      	RCALL __SAVELOCR6
00029d e010      	LDI  R17,0
00029e 85ac      	LDD  R26,Y+12
00029f 85bd      	LDD  R27,Y+12+1
0002a0 e0e0      	LDI  R30,LOW(0)
0002a1 e0f0      	LDI  R31,HIGH(0)
0002a2 93ed      	ST   X+,R30
0002a3 93fc      	ST   X,R31
                 _0x2000016:
0002a4 89ea      	LDD  R30,Y+18
0002a5 89fb      	LDD  R31,Y+18+1
0002a6 9631      	ADIW R30,1
0002a7 8bea      	STD  Y+18,R30
0002a8 8bfb      	STD  Y+18+1,R31
0002a9 9731      	SBIW R30,1
0002aa 91e4      	LPM  R30,Z
0002ab 2f2e      	MOV  R18,R30
0002ac 30e0      	CPI  R30,0
0002ad f409      	BRNE PC+2
0002ae c109      	RJMP _0x2000018
0002af 2fe1      	MOV  R30,R17
0002b0 30e0      	CPI  R30,0
0002b1 f431      	BRNE _0x200001C
0002b2 3225      	CPI  R18,37
0002b3 f411      	BRNE _0x200001D
0002b4 e011      	LDI  R17,LOW(1)
0002b5 c001      	RJMP _0x200001E
                 _0x200001D:
0002b6 d185      	RCALL SUBOPT_0x8
                 _0x200001E:
0002b7 c0ff      	RJMP _0x200001B
                 _0x200001C:
0002b8 30e1      	CPI  R30,LOW(0x1)
0002b9 f4a1      	BRNE _0x200001F
0002ba 3225      	CPI  R18,37
0002bb f411      	BRNE _0x2000020
0002bc d17f      	RCALL SUBOPT_0x8
0002bd c0f8      	RJMP _0x20000CC
                 _0x2000020:
0002be e012      	LDI  R17,LOW(2)
0002bf e040      	LDI  R20,LOW(0)
0002c0 e000      	LDI  R16,LOW(0)
0002c1 322d      	CPI  R18,45
0002c2 f411      	BRNE _0x2000021
0002c3 e001      	LDI  R16,LOW(1)
0002c4 c0f2      	RJMP _0x200001B
                 _0x2000021:
0002c5 322b      	CPI  R18,43
0002c6 f411      	BRNE _0x2000022
0002c7 e24b      	LDI  R20,LOW(43)
0002c8 c0ee      	RJMP _0x200001B
                 _0x2000022:
0002c9 3220      	CPI  R18,32
0002ca f411      	BRNE _0x2000023
0002cb e240      	LDI  R20,LOW(32)
0002cc c0ea      	RJMP _0x200001B
                 _0x2000023:
0002cd c002      	RJMP _0x2000024
                 _0x200001F:
0002ce 30e2      	CPI  R30,LOW(0x2)
0002cf f439      	BRNE _0x2000025
                 _0x2000024:
0002d0 e050      	LDI  R21,LOW(0)
0002d1 e013      	LDI  R17,LOW(3)
0002d2 3320      	CPI  R18,48
0002d3 f411      	BRNE _0x2000026
0002d4 6800      	ORI  R16,LOW(128)
0002d5 c0e1      	RJMP _0x200001B
                 _0x2000026:
0002d6 c003      	RJMP _0x2000027
                 _0x2000025:
0002d7 30e3      	CPI  R30,LOW(0x3)
0002d8 f009      	BREQ PC+2
0002d9 c0dd      	RJMP _0x200001B
                 _0x2000027:
0002da 3320      	CPI  R18,48
0002db f010      	BRLO _0x200002A
0002dc 332a      	CPI  R18,58
0002dd f008      	BRLO _0x200002B
                 _0x200002A:
0002de c007      	RJMP _0x2000029
                 _0x200002B:
0002df e0aa      	LDI  R26,LOW(10)
0002e0 9f5a      	MUL  R21,R26
0002e1 2d50      	MOV  R21,R0
0002e2 2fe2      	MOV  R30,R18
0002e3 53e0      	SUBI R30,LOW(48)
0002e4 0f5e      	ADD  R21,R30
0002e5 c0d1      	RJMP _0x200001B
                 _0x2000029:
0002e6 2fe2      	MOV  R30,R18
0002e7 36e3      	CPI  R30,LOW(0x63)
0002e8 f439      	BRNE _0x200002F
0002e9 d159      	RCALL SUBOPT_0x9
0002ea 89e8      	LDD  R30,Y+16
0002eb 89f9      	LDD  R31,Y+16+1
0002ec 81a4      	LDD  R26,Z+4
0002ed 93aa      	ST   -Y,R26
0002ee d15a      	RCALL SUBOPT_0xA
0002ef c0c6      	RJMP _0x2000030
                 _0x200002F:
0002f0 37e3      	CPI  R30,LOW(0x73)
0002f1 f429      	BRNE _0x2000032
0002f2 d150      	RCALL SUBOPT_0x9
0002f3 d15b      	RCALL SUBOPT_0xB
0002f4 d0fb      	RCALL _strlen
0002f5 2f1e      	MOV  R17,R30
0002f6 c007      	RJMP _0x2000033
                 _0x2000032:
0002f7 37e0      	CPI  R30,LOW(0x70)
0002f8 f449      	BRNE _0x2000035
0002f9 d149      	RCALL SUBOPT_0x9
0002fa d154      	RCALL SUBOPT_0xB
0002fb d100      	RCALL _strlenf
0002fc 2f1e      	MOV  R17,R30
0002fd 6008      	ORI  R16,LOW(8)
                 _0x2000033:
0002fe 6002      	ORI  R16,LOW(2)
0002ff 770f      	ANDI R16,LOW(127)
000300 e030      	LDI  R19,LOW(0)
000301 c038      	RJMP _0x2000036
                 _0x2000035:
000302 36e4      	CPI  R30,LOW(0x64)
000303 f011      	BREQ _0x2000039
000304 36e9      	CPI  R30,LOW(0x69)
000305 f411      	BRNE _0x200003A
                 _0x2000039:
000306 6004      	ORI  R16,LOW(4)
000307 c002      	RJMP _0x200003B
                 _0x200003A:
000308 37e5      	CPI  R30,LOW(0x75)
000309 f431      	BRNE _0x200003C
                 _0x200003B:
00030a e8ec      	LDI  R30,LOW(_tbl10_G100*2)
00030b e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
00030c 83ee      	STD  Y+6,R30
00030d 83ff      	STD  Y+6+1,R31
00030e e015      	LDI  R17,LOW(5)
00030f c00c      	RJMP _0x200003D
                 _0x200003C:
000310 35e8      	CPI  R30,LOW(0x58)
000311 f411      	BRNE _0x200003F
000312 6008      	ORI  R16,LOW(8)
000313 c003      	RJMP _0x2000040
                 _0x200003F:
000314 37e8      	CPI  R30,LOW(0x78)
000315 f009      	BREQ PC+2
000316 c09f      	RJMP _0x2000071
                 _0x2000040:
000317 e9e6      	LDI  R30,LOW(_tbl16_G100*2)
000318 e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
000319 83ee      	STD  Y+6,R30
00031a 83ff      	STD  Y+6+1,R31
00031b e014      	LDI  R17,LOW(4)
                 _0x200003D:
00031c ff02      	SBRS R16,2
00031d c015      	RJMP _0x2000042
00031e d124      	RCALL SUBOPT_0x9
00031f 89a8      	LDD  R26,Y+16
000320 89b9      	LDD  R27,Y+16+1
000321 9614      	ADIW R26,4
000322 91ed      	LD   R30,X+
000323 91fd      	LD   R31,X+
000324 87ea      	STD  Y+10,R30
000325 87fb      	STD  Y+10+1,R31
000326 85ab      	LDD  R26,Y+11
000327 23aa      	TST  R26
000328 f422      	BRPL _0x2000043
000329 d145      	RCALL __ANEGW1
00032a 87ea      	STD  Y+10,R30
00032b 87fb      	STD  Y+10+1,R31
00032c e24d      	LDI  R20,LOW(45)
                 _0x2000043:
00032d 3040      	CPI  R20,0
00032e f011      	BREQ _0x2000044
00032f 5f1f      	SUBI R17,-LOW(1)
000330 c001      	RJMP _0x2000045
                 _0x2000044:
000331 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
000332 c007      	RJMP _0x2000046
                 _0x2000042:
000333 d10f      	RCALL SUBOPT_0x9
000334 89a8      	LDD  R26,Y+16
000335 89b9      	LDD  R27,Y+16+1
000336 9614      	ADIW R26,4
000337 d148      	RCALL __GETW1P
000338 87ea      	STD  Y+10,R30
000339 87fb      	STD  Y+10+1,R31
                 _0x2000046:
                 _0x2000036:
00033a fd00      	SBRC R16,0
00033b c010      	RJMP _0x2000047
                 _0x2000048:
00033c 1715      	CP   R17,R21
00033d f470      	BRSH _0x200004A
00033e ff07      	SBRS R16,7
00033f c008      	RJMP _0x200004B
000340 ff02      	SBRS R16,2
000341 c004      	RJMP _0x200004C
000342 7f0b      	ANDI R16,LOW(251)
000343 2f24      	MOV  R18,R20
000344 5011      	SUBI R17,LOW(1)
000345 c001      	RJMP _0x200004D
                 _0x200004C:
000346 e320      	LDI  R18,LOW(48)
                 _0x200004D:
000347 c001      	RJMP _0x200004E
                 _0x200004B:
000348 e220      	LDI  R18,LOW(32)
                 _0x200004E:
000349 d0f2      	RCALL SUBOPT_0x8
00034a 5051      	SUBI R21,LOW(1)
00034b cff0      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
00034c 2f31      	MOV  R19,R17
00034d ff01      	SBRS R16,1
00034e c016      	RJMP _0x200004F
                 _0x2000050:
00034f 3030      	CPI  R19,0
000350 f099      	BREQ _0x2000052
000351 ff03      	SBRS R16,3
000352 c006      	RJMP _0x2000053
000353 81ee      	LDD  R30,Y+6
000354 81ff      	LDD  R31,Y+6+1
000355 9125      	LPM  R18,Z+
000356 83ee      	STD  Y+6,R30
000357 83ff      	STD  Y+6+1,R31
000358 c005      	RJMP _0x2000054
                 _0x2000053:
000359 81ae      	LDD  R26,Y+6
00035a 81bf      	LDD  R27,Y+6+1
00035b 912d      	LD   R18,X+
00035c 83ae      	STD  Y+6,R26
00035d 83bf      	STD  Y+6+1,R27
                 _0x2000054:
00035e d0dd      	RCALL SUBOPT_0x8
00035f 3050      	CPI  R21,0
000360 f009      	BREQ _0x2000055
000361 5051      	SUBI R21,LOW(1)
                 _0x2000055:
000362 5031      	SUBI R19,LOW(1)
000363 cfeb      	RJMP _0x2000050
                 _0x2000052:
000364 c048      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
000365 e320      	LDI  R18,LOW(48)
000366 81ee      	LDD  R30,Y+6
000367 81ff      	LDD  R31,Y+6+1
000368 d11b      	RCALL __GETW1PF
000369 87e8      	STD  Y+8,R30
00036a 87f9      	STD  Y+8+1,R31
00036b 81ee      	LDD  R30,Y+6
00036c 81ff      	LDD  R31,Y+6+1
00036d 9632      	ADIW R30,2
00036e 83ee      	STD  Y+6,R30
00036f 83ff      	STD  Y+6+1,R31
                 _0x200005A:
000370 85e8      	LDD  R30,Y+8
000371 85f9      	LDD  R31,Y+8+1
000372 85aa      	LDD  R26,Y+10
000373 85bb      	LDD  R27,Y+10+1
000374 17ae      	CP   R26,R30
000375 07bf      	CPC  R27,R31
000376 f050      	BRLO _0x200005C
000377 5f2f      	SUBI R18,-LOW(1)
000378 85a8      	LDD  R26,Y+8
000379 85b9      	LDD  R27,Y+8+1
00037a 85ea      	LDD  R30,Y+10
00037b 85fb      	LDD  R31,Y+10+1
00037c 1bea      	SUB  R30,R26
00037d 0bfb      	SBC  R31,R27
00037e 87ea      	STD  Y+10,R30
00037f 87fb      	STD  Y+10+1,R31
000380 cfef      	RJMP _0x200005A
                 _0x200005C:
000381 332a      	CPI  R18,58
000382 f028      	BRLO _0x200005D
000383 ff03      	SBRS R16,3
000384 c002      	RJMP _0x200005E
000385 5f29      	SUBI R18,-LOW(7)
000386 c001      	RJMP _0x200005F
                 _0x200005E:
000387 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
000388 fd04      	SBRC R16,4
000389 c019      	RJMP _0x2000061
00038a 3321      	CPI  R18,49
00038b f420      	BRSH _0x2000063
00038c 85a8      	LDD  R26,Y+8
00038d 85b9      	LDD  R27,Y+8+1
00038e 9711      	SBIW R26,1
00038f f409      	BRNE _0x2000062
                 _0x2000063:
000390 c009      	RJMP _0x20000CD
                 _0x2000062:
000391 1753      	CP   R21,R19
000392 f010      	BRLO _0x2000067
000393 ff00      	SBRS R16,0
000394 c001      	RJMP _0x2000068
                 _0x2000067:
000395 c011      	RJMP _0x2000066
                 _0x2000068:
000396 e220      	LDI  R18,LOW(32)
000397 ff07      	SBRS R16,7
000398 c00a      	RJMP _0x2000069
000399 e320      	LDI  R18,LOW(48)
                 _0x20000CD:
00039a 6100      	ORI  R16,LOW(16)
00039b ff02      	SBRS R16,2
00039c c006      	RJMP _0x200006A
00039d 7f0b      	ANDI R16,LOW(251)
00039e 934a      	ST   -Y,R20
00039f d0a9      	RCALL SUBOPT_0xA
0003a0 3050      	CPI  R21,0
0003a1 f009      	BREQ _0x200006B
0003a2 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
0003a3 d098      	RCALL SUBOPT_0x8
0003a4 3050      	CPI  R21,0
0003a5 f009      	BREQ _0x200006C
0003a6 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
0003a7 5031      	SUBI R19,LOW(1)
0003a8 85a8      	LDD  R26,Y+8
0003a9 85b9      	LDD  R27,Y+8+1
0003aa 9712      	SBIW R26,2
0003ab f008      	BRLO _0x2000059
0003ac cfb8      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
0003ad ff00      	SBRS R16,0
0003ae c007      	RJMP _0x200006D
                 _0x200006E:
0003af 3050      	CPI  R21,0
0003b0 f029      	BREQ _0x2000070
0003b1 5051      	SUBI R21,LOW(1)
0003b2 e2e0      	LDI  R30,LOW(32)
0003b3 93ea      	ST   -Y,R30
0003b4 d094      	RCALL SUBOPT_0xA
0003b5 cff9      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
                 _0x20000CC:
0003b6 e010      	LDI  R17,LOW(0)
                 _0x200001B:
0003b7 ceec      	RJMP _0x2000016
                 _0x2000018:
0003b8 85ac      	LDD  R26,Y+12
0003b9 85bd      	LDD  R27,Y+12+1
0003ba 91ed      	LD   R30,X+
0003bb 91fd      	LD   R31,X+
0003bc d0a3      	RCALL __LOADLOCR6
0003bd 9664      	ADIW R28,20
0003be 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0003bf 92ff      	PUSH R15
0003c0 2ef8      	MOV  R15,R24
0003c1 9726      	SBIW R28,6
0003c2 d096      	RCALL __SAVELOCR6
0003c3 01fe      	MOVW R30,R28
0003c4 d0a2      	RCALL __ADDW1R15
                +
0003c5 8546     +LDD R20 , Z + 14
0003c6 8557     +LDD R21 , Z + 14 + 1
                 	__GETWRZ 20,21,14
0003c7 2e04      	MOV  R0,R20
0003c8 2a05      	OR   R0,R21
0003c9 f419      	BRNE _0x2000072
0003ca efef      	LDI  R30,LOW(65535)
0003cb efff      	LDI  R31,HIGH(65535)
0003cc c01f      	RJMP _0x2060001
                 _0x2000072:
0003cd 01de      	MOVW R26,R28
0003ce 9618      	ADIW R26,8
0003cf d09b      	RCALL __ADDW2R15
0003d0 018d      	MOVW R16,R26
                +
0003d1 8748     +STD Y + 8 , R20
0003d2 8759     +STD Y + 8 + 1 , R21
                 	__PUTWSR 20,21,8
0003d3 e0e0      	LDI  R30,LOW(0)
0003d4 87ea      	STD  Y+10,R30
0003d5 87eb      	STD  Y+10+1,R30
0003d6 01de      	MOVW R26,R28
0003d7 961c      	ADIW R26,12
0003d8 d092      	RCALL __ADDW2R15
0003d9 91ed      	LD   R30,X+
0003da 91fd      	LD   R31,X+
0003db 93fa      	ST   -Y,R31
0003dc 93ea      	ST   -Y,R30
0003dd 931a      	ST   -Y,R17
0003de 930a      	ST   -Y,R16
0003df e6ee      	LDI  R30,LOW(_put_buff_G100)
0003e0 e0f2      	LDI  R31,HIGH(_put_buff_G100)
0003e1 93fa      	ST   -Y,R31
0003e2 93ea      	ST   -Y,R30
0003e3 01de      	MOVW R26,R28
0003e4 961c      	ADIW R26,12
0003e5 deb3      	RCALL __print_G100
0003e6 019f      	MOVW R18,R30
0003e7 85a8      	LDD  R26,Y+8
0003e8 85b9      	LDD  R27,Y+8+1
0003e9 e0e0      	LDI  R30,LOW(0)
0003ea 93ec      	ST   X,R30
0003eb 01f9      	MOVW R30,R18
                 _0x2060001:
0003ec d073      	RCALL __LOADLOCR6
0003ed 962c      	ADIW R28,12
0003ee 90ff      	POP  R15
0003ef 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
0003f0 93ba      	ST   -Y,R27
0003f1 93aa      	ST   -Y,R26
0003f2 91a9          ld   r26,y+
0003f3 91b9          ld   r27,y+
0003f4 27ee          clr  r30
0003f5 27ff          clr  r31
                 strlen0:
0003f6 916d          ld   r22,x+
0003f7 2366          tst  r22
0003f8 f011          breq strlen1
0003f9 9631          adiw r30,1
0003fa cffb          rjmp strlen0
                 strlen1:
0003fb 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0003fc 93ba      	ST   -Y,R27
0003fd 93aa      	ST   -Y,R26
0003fe 27aa          clr  r26
0003ff 27bb          clr  r27
000400 91e9          ld   r30,y+
000401 91f9          ld   r31,y+
                 strlenf0:
000402 9005      	lpm  r0,z+
000403 2000          tst  r0
000404 f011          breq strlenf1
000405 9611          adiw r26,1
000406 cffb          rjmp strlenf0
                 strlenf1:
000407 01fd          movw r30,r26
000408 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _dtemp:
000500           	.BYTE 0x2
                 _sbuf:
000502           	.BYTE 0x10
                 _mpu_addr:
000512           	.BYTE 0xE
                 _mpu6050_buf:
000520           	.BYTE 0xE
                 _mpu6050:
00052e           	.BYTE 0xE
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
000409 91e0 0071 	LDS  R30,113
00040b 7fe8      	ANDI R30,LOW(0xF8)
00040c 30e8      	CPI  R30,LOW(0x8)
00040d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1:
00040e 2fe3      	MOV  R30,R19
00040f 0fee      	LSL  R30
000410 93e0 0073 	STS  115,R30
000412 91e0 0074 	LDS  R30,116
000414 7def      	ANDI R30,0xDF
000415 93e0 0074 	STS  116,R30
000417 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
000418 91e0 0071 	LDS  R30,113
00041a 7fe8      	ANDI R30,LOW(0xF8)
00041b 31e8      	CPI  R30,LOW(0x18)
00041c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3:
00041d 9300 0073 	STS  115,R16
00041f 91e0 0074 	LDS  R30,116
000421 7def      	ANDI R30,0xDF
000422 93e0 0074 	STS  116,R30
000424 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x4:
000425 91e0 0071 	LDS  R30,113
000427 7fe8      	ANDI R30,LOW(0xF8)
000428 32e8      	CPI  R30,LOW(0x28)
000429 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x5:
00042a 91e0 0074 	LDS  R30,116
00042c 7def      	ANDI R30,0xDF
00042d 93e0 0074 	STS  116,R30
00042f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x6:
000430 93ea      	ST   -Y,R30
000431 e0a0      	LDI  R26,LOW(0)
000432 dcc5      	RCALL _mpu6050_write
000433 e6e8      	LDI  R30,LOW(104)
000434 93ea      	ST   -Y,R30
000435 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x7:
000436 91ed      	LD   R30,X+
000437 91fd      	LD   R31,X+
000438 9631      	ADIW R30,1
000439 93fe      	ST   -X,R31
00043a 93ee      	ST   -X,R30
00043b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x8:
00043c 932a      	ST   -Y,R18
00043d 85ad      	LDD  R26,Y+13
00043e 85be      	LDD  R27,Y+13+1
00043f 85ef      	LDD  R30,Y+15
000440 89f8      	LDD  R31,Y+15+1
000441 9509      	ICALL
000442 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x9:
000443 89e8      	LDD  R30,Y+16
000444 89f9      	LDD  R31,Y+16+1
000445 9734      	SBIW R30,4
000446 8be8      	STD  Y+16,R30
000447 8bf9      	STD  Y+16+1,R31
000448 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xA:
000449 85ad      	LDD  R26,Y+13
00044a 85be      	LDD  R27,Y+13+1
00044b 85ef      	LDD  R30,Y+15
00044c 89f8      	LDD  R31,Y+15+1
00044d 9509      	ICALL
00044e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xB:
00044f 89a8      	LDD  R26,Y+16
000450 89b9      	LDD  R27,Y+16+1
000451 9614      	ADIW R26,4
000452 91ed      	LD   R30,X+
000453 91fd      	LD   R31,X+
000454 83ee      	STD  Y+6,R30
000455 83ff      	STD  Y+6+1,R31
000456 81ae      	LDD  R26,Y+6
000457 81bf      	LDD  R27,Y+6+1
000458 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
000459 935a      	ST   -Y,R21
                 __SAVELOCR5:
00045a 934a      	ST   -Y,R20
                 __SAVELOCR4:
00045b 933a      	ST   -Y,R19
                 __SAVELOCR3:
00045c 932a      	ST   -Y,R18
                 __SAVELOCR2:
00045d 931a      	ST   -Y,R17
00045e 930a      	ST   -Y,R16
00045f 9508      	RET
                 
                 __LOADLOCR6:
000460 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000461 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000462 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000463 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000464 8119      	LDD  R17,Y+1
000465 8108      	LD   R16,Y
000466 9508      	RET
                 
                 __ADDW1R15:
000467 2400      	CLR  R0
000468 0def      	ADD  R30,R15
000469 1df0      	ADC  R31,R0
00046a 9508      	RET
                 
                 __ADDW2R15:
00046b 2400      	CLR  R0
00046c 0daf      	ADD  R26,R15
00046d 1db0      	ADC  R27,R0
00046e 9508      	RET
                 
                 __ANEGW1:
00046f 95f1      	NEG  R31
000470 95e1      	NEG  R30
000471 40f0      	SBCI R31,0
000472 9508      	RET
                 
                 __ANEGD1:
000473 95f0      	COM  R31
000474 9560      	COM  R22
000475 9570      	COM  R23
000476 95e1      	NEG  R30
000477 4fff      	SBCI R31,-1
000478 4f6f      	SBCI R22,-1
000479 4f7f      	SBCI R23,-1
00047a 9508      	RET
                 
                 __CWD1:
00047b 2f6f      	MOV  R22,R31
00047c 0f66      	ADD  R22,R22
00047d 0b66      	SBC  R22,R22
00047e 2f76      	MOV  R23,R22
00047f 9508      	RET
                 
                 __GETW1P:
000480 91ed      	LD   R30,X+
000481 91fc      	LD   R31,X
000482 9711      	SBIW R26,1
000483 9508      	RET
                 
                 __GETW1PF:
000484 9005      	LPM  R0,Z+
000485 91f4      	LPM  R31,Z
000486 2de0      	MOV  R30,R0
000487 9508      	RET
                 
                 __PUTPARD1:
000488 937a      	ST   -Y,R23
000489 936a      	ST   -Y,R22
00048a 93fa      	ST   -Y,R31
00048b 93ea      	ST   -Y,R30
00048c 9508      	RET
                 
                 __CPW02:
00048d 2400      	CLR  R0
00048e 160a      	CP   R0,R26
00048f 060b      	CPC  R0,R27
000490 9508      	RET
                 
                 __ROUND_REPACK:
000491 2355      	TST  R21
000492 f442      	BRPL __REPACK
000493 3850      	CPI  R21,0x80
000494 f411      	BRNE __ROUND_REPACK0
000495 ffe0      	SBRS R30,0
000496 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000497 9631      	ADIW R30,1
000498 1f69      	ADC  R22,R25
000499 1f79      	ADC  R23,R25
00049a f06b      	BRVS __REPACK1
                 
                 __REPACK:
00049b e850      	LDI  R21,0x80
00049c 2757      	EOR  R21,R23
00049d f411      	BRNE __REPACK0
00049e 935f      	PUSH R21
00049f c0c8      	RJMP __ZERORES
                 __REPACK0:
0004a0 3f5f      	CPI  R21,0xFF
0004a1 f031      	BREQ __REPACK1
0004a2 0f66      	LSL  R22
0004a3 0c00      	LSL  R0
0004a4 9557      	ROR  R21
0004a5 9567      	ROR  R22
0004a6 2f75      	MOV  R23,R21
0004a7 9508      	RET
                 __REPACK1:
0004a8 935f      	PUSH R21
0004a9 2000      	TST  R0
0004aa f00a      	BRMI __REPACK2
0004ab c0c7      	RJMP __MAXRES
                 __REPACK2:
0004ac c0c0      	RJMP __MINRES
                 
                 __UNPACK:
0004ad e850      	LDI  R21,0x80
0004ae 2e19      	MOV  R1,R25
0004af 2215      	AND  R1,R21
0004b0 0f88      	LSL  R24
0004b1 1f99      	ROL  R25
0004b2 2795      	EOR  R25,R21
0004b3 0f55      	LSL  R21
0004b4 9587      	ROR  R24
                 
                 __UNPACK1:
0004b5 e850      	LDI  R21,0x80
0004b6 2e07      	MOV  R0,R23
0004b7 2205      	AND  R0,R21
0004b8 0f66      	LSL  R22
0004b9 1f77      	ROL  R23
0004ba 2775      	EOR  R23,R21
0004bb 0f55      	LSL  R21
0004bc 9567      	ROR  R22
0004bd 9508      	RET
                 
                 __CFD1U:
0004be 9468      	SET
0004bf c001      	RJMP __CFD1U0
                 __CFD1:
0004c0 94e8      	CLT
                 __CFD1U0:
0004c1 935f      	PUSH R21
0004c2 dff2      	RCALL __UNPACK1
0004c3 3870      	CPI  R23,0x80
0004c4 f018      	BRLO __CFD10
0004c5 3f7f      	CPI  R23,0xFF
0004c6 f408      	BRCC __CFD10
0004c7 c0a0      	RJMP __ZERORES
                 __CFD10:
0004c8 e156      	LDI  R21,22
0004c9 1b57      	SUB  R21,R23
0004ca f4aa      	BRPL __CFD11
0004cb 9551      	NEG  R21
0004cc 3058      	CPI  R21,8
0004cd f40e      	BRTC __CFD19
0004ce 3059      	CPI  R21,9
                 __CFD19:
0004cf f030      	BRLO __CFD17
0004d0 efef      	SER  R30
0004d1 efff      	SER  R31
0004d2 ef6f      	SER  R22
0004d3 e77f      	LDI  R23,0x7F
0004d4 f977      	BLD  R23,7
0004d5 c01a      	RJMP __CFD15
                 __CFD17:
0004d6 2777      	CLR  R23
0004d7 2355      	TST  R21
0004d8 f0b9      	BREQ __CFD15
                 __CFD18:
0004d9 0fee      	LSL  R30
0004da 1fff      	ROL  R31
0004db 1f66      	ROL  R22
0004dc 1f77      	ROL  R23
0004dd 955a      	DEC  R21
0004de f7d1      	BRNE __CFD18
0004df c010      	RJMP __CFD15
                 __CFD11:
0004e0 2777      	CLR  R23
                 __CFD12:
0004e1 3058      	CPI  R21,8
0004e2 f028      	BRLO __CFD13
0004e3 2fef      	MOV  R30,R31
0004e4 2ff6      	MOV  R31,R22
0004e5 2f67      	MOV  R22,R23
0004e6 5058      	SUBI R21,8
0004e7 cff9      	RJMP __CFD12
                 __CFD13:
0004e8 2355      	TST  R21
0004e9 f031      	BREQ __CFD15
                 __CFD14:
0004ea 9576      	LSR  R23
0004eb 9567      	ROR  R22
0004ec 95f7      	ROR  R31
0004ed 95e7      	ROR  R30
0004ee 955a      	DEC  R21
0004ef f7d1      	BRNE __CFD14
                 __CFD15:
0004f0 2000      	TST  R0
0004f1 f40a      	BRPL __CFD16
0004f2 df80      	RCALL __ANEGD1
                 __CFD16:
0004f3 915f      	POP  R21
0004f4 9508      	RET
                 
                 __CDF1U:
0004f5 9468      	SET
0004f6 c001      	RJMP __CDF1U0
                 __CDF1:
0004f7 94e8      	CLT
                 __CDF1U0:
0004f8 9730      	SBIW R30,0
0004f9 4060      	SBCI R22,0
0004fa 4070      	SBCI R23,0
0004fb f0b1      	BREQ __CDF10
0004fc 2400      	CLR  R0
0004fd f026      	BRTS __CDF11
0004fe 2377      	TST  R23
0004ff f412      	BRPL __CDF11
000500 9400      	COM  R0
000501 df71      	RCALL __ANEGD1
                 __CDF11:
000502 2e17      	MOV  R1,R23
000503 e17e      	LDI  R23,30
000504 2011      	TST  R1
                 __CDF12:
000505 f032      	BRMI __CDF13
000506 957a      	DEC  R23
000507 0fee      	LSL  R30
000508 1fff      	ROL  R31
000509 1f66      	ROL  R22
00050a 1c11      	ROL  R1
00050b cff9      	RJMP __CDF12
                 __CDF13:
00050c 2fef      	MOV  R30,R31
00050d 2ff6      	MOV  R31,R22
00050e 2d61      	MOV  R22,R1
00050f 935f      	PUSH R21
000510 df8a      	RCALL __REPACK
000511 915f      	POP  R21
                 __CDF10:
000512 9508      	RET
                 
                 __SWAPACC:
000513 934f      	PUSH R20
000514 01af      	MOVW R20,R30
000515 01fd      	MOVW R30,R26
000516 01da      	MOVW R26,R20
000517 01ab      	MOVW R20,R22
000518 01bc      	MOVW R22,R24
000519 01ca      	MOVW R24,R20
00051a 2d40      	MOV  R20,R0
00051b 2c01      	MOV  R0,R1
00051c 2e14      	MOV  R1,R20
00051d 914f      	POP  R20
00051e 9508      	RET
                 
                 __UADD12:
00051f 0fea      	ADD  R30,R26
000520 1ffb      	ADC  R31,R27
000521 1f68      	ADC  R22,R24
000522 9508      	RET
                 
                 __NEGMAN1:
000523 95e0      	COM  R30
000524 95f0      	COM  R31
000525 9560      	COM  R22
000526 5fef      	SUBI R30,-1
000527 4fff      	SBCI R31,-1
000528 4f6f      	SBCI R22,-1
000529 9508      	RET
                 
                 __ADDF12:
00052a 935f      	PUSH R21
00052b df81      	RCALL __UNPACK
00052c 3890      	CPI  R25,0x80
00052d f139      	BREQ __ADDF129
                 
                 __ADDF120:
00052e 3870      	CPI  R23,0x80
00052f f121      	BREQ __ADDF128
                 __ADDF121:
000530 2f57      	MOV  R21,R23
000531 1b59      	SUB  R21,R25
000532 f12b      	BRVS __ADDF1211
000533 f412      	BRPL __ADDF122
000534 dfde      	RCALL __SWAPACC
000535 cffa      	RJMP __ADDF121
                 __ADDF122:
000536 3158      	CPI  R21,24
000537 f018      	BRLO __ADDF123
000538 27aa      	CLR  R26
000539 27bb      	CLR  R27
00053a 2788      	CLR  R24
                 __ADDF123:
00053b 3058      	CPI  R21,8
00053c f028      	BRLO __ADDF124
00053d 2fab      	MOV  R26,R27
00053e 2fb8      	MOV  R27,R24
00053f 2788      	CLR  R24
000540 5058      	SUBI R21,8
000541 cff9      	RJMP __ADDF123
                 __ADDF124:
000542 2355      	TST  R21
000543 f029      	BREQ __ADDF126
                 __ADDF125:
000544 9586      	LSR  R24
000545 95b7      	ROR  R27
000546 95a7      	ROR  R26
000547 955a      	DEC  R21
000548 f7d9      	BRNE __ADDF125
                 __ADDF126:
000549 2d50      	MOV  R21,R0
00054a 2551      	EOR  R21,R1
00054b f072      	BRMI __ADDF127
00054c dfd2      	RCALL __UADD12
00054d f438      	BRCC __ADDF129
00054e 9567      	ROR  R22
00054f 95f7      	ROR  R31
000550 95e7      	ROR  R30
000551 9573      	INC  R23
000552 f413      	BRVC __ADDF129
000553 c01f      	RJMP __MAXRES
                 __ADDF128:
000554 dfbe      	RCALL __SWAPACC
                 __ADDF129:
000555 df45      	RCALL __REPACK
000556 915f      	POP  R21
000557 9508      	RET
                 __ADDF1211:
000558 f7d8      	BRCC __ADDF128
000559 cffb      	RJMP __ADDF129
                 __ADDF127:
00055a 1bea      	SUB  R30,R26
00055b 0bfb      	SBC  R31,R27
00055c 0b68      	SBC  R22,R24
00055d f051      	BREQ __ZERORES
00055e f410      	BRCC __ADDF1210
00055f 9400      	COM  R0
000560 dfc2      	RCALL __NEGMAN1
                 __ADDF1210:
000561 2366      	TST  R22
000562 f392      	BRMI __ADDF129
000563 0fee      	LSL  R30
000564 1fff      	ROL  R31
000565 1f66      	ROL  R22
000566 957a      	DEC  R23
000567 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000568 27ee      	CLR  R30
000569 27ff      	CLR  R31
00056a 01bf      	MOVW R22,R30
00056b 915f      	POP  R21
00056c 9508      	RET
                 
                 __MINRES:
00056d efef      	SER  R30
00056e efff      	SER  R31
00056f e76f      	LDI  R22,0x7F
000570 ef7f      	SER  R23
000571 915f      	POP  R21
000572 9508      	RET
                 
                 __MAXRES:
000573 efef      	SER  R30
000574 efff      	SER  R31
000575 e76f      	LDI  R22,0x7F
000576 e77f      	LDI  R23,0x7F
000577 915f      	POP  R21
000578 9508      	RET
                 
                 __DIVF21:
000579 935f      	PUSH R21
00057a df32      	RCALL __UNPACK
00057b 3870      	CPI  R23,0x80
00057c f421      	BRNE __DIVF210
00057d 2011      	TST  R1
                 __DIVF211:
00057e f40a      	BRPL __DIVF219
00057f cfed      	RJMP __MINRES
                 __DIVF219:
000580 cff2      	RJMP __MAXRES
                 __DIVF210:
000581 3890      	CPI  R25,0x80
000582 f409      	BRNE __DIVF218
                 __DIVF217:
000583 cfe4      	RJMP __ZERORES
                 __DIVF218:
000584 2401      	EOR  R0,R1
000585 9408      	SEC
000586 0b97      	SBC  R25,R23
000587 f41b      	BRVC __DIVF216
000588 f3d4      	BRLT __DIVF217
000589 2000      	TST  R0
00058a cff3      	RJMP __DIVF211
                 __DIVF216:
00058b 2f79      	MOV  R23,R25
00058c 931f      	PUSH R17
00058d 932f      	PUSH R18
00058e 933f      	PUSH R19
00058f 934f      	PUSH R20
000590 2411      	CLR  R1
000591 2711      	CLR  R17
000592 2722      	CLR  R18
000593 2733      	CLR  R19
000594 01a9      	MOVW R20,R18
000595 e290      	LDI  R25,32
                 __DIVF212:
000596 17ae      	CP   R26,R30
000597 07bf      	CPC  R27,R31
000598 0786      	CPC  R24,R22
000599 0741      	CPC  R20,R17
00059a f030      	BRLO __DIVF213
00059b 1bae      	SUB  R26,R30
00059c 0bbf      	SBC  R27,R31
00059d 0b86      	SBC  R24,R22
00059e 0b41      	SBC  R20,R17
00059f 9408      	SEC
0005a0 c001      	RJMP __DIVF214
                 __DIVF213:
0005a1 9488      	CLC
                 __DIVF214:
0005a2 1f55      	ROL  R21
0005a3 1f22      	ROL  R18
0005a4 1f33      	ROL  R19
0005a5 1c11      	ROL  R1
0005a6 1faa      	ROL  R26
0005a7 1fbb      	ROL  R27
0005a8 1f88      	ROL  R24
0005a9 1f44      	ROL  R20
0005aa 959a      	DEC  R25
0005ab f751      	BRNE __DIVF212
0005ac 01f9      	MOVW R30,R18
0005ad 2d61      	MOV  R22,R1
0005ae 914f      	POP  R20
0005af 913f      	POP  R19
0005b0 912f      	POP  R18
0005b1 911f      	POP  R17
0005b2 2366      	TST  R22
0005b3 f032      	BRMI __DIVF215
0005b4 0f55      	LSL  R21
0005b5 1fee      	ROL  R30
0005b6 1fff      	ROL  R31
0005b7 1f66      	ROL  R22
0005b8 957a      	DEC  R23
0005b9 f24b      	BRVS __DIVF217
                 __DIVF215:
0005ba ded6      	RCALL __ROUND_REPACK
0005bb 915f      	POP  R21
0005bc 9508      	RET
                 
                 _delay_ms:
0005bd 9610      	adiw r26,0
0005be f039      	breq __delay_ms1
                 __delay_ms0:
0005bf 95a8      	wdr
                +
0005c0 ea80     +LDI R24 , LOW ( 0xFA0 )
0005c1 e09f     +LDI R25 , HIGH ( 0xFA0 )
                +__DELAY_USW_LOOP :
0005c2 9701     +SBIW R24 , 1
0005c3 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA0
0005c4 9711      	sbiw r26,1
0005c5 f7c9      	brne __delay_ms0
                 __delay_ms1:
0005c6 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 :  31 r1 :  15 r2 :   0 r3 :   0 r4 :   0 r5 :   5 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   5 
r16:  38 r17:  36 r18:  45 r19:  19 r20:  26 r21:  72 r22:  46 r23:  36 
r24:  31 r25:  17 r26: 107 r27:  56 r28:  13 r29:   1 r30: 296 r31: 119 
x  :  31 y  : 141 z  :  17 
Registers used: 23 out of 35 (65.7%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   6 add   :   5 
adiw  :  23 and   :   2 andi  :  24 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   4 brcs  :   0 break :   0 breq  :  45 
brge  :   2 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  13 
brlt  :   1 brmi  :   6 brne  :  35 brpl  :   9 brsh  :   3 brtc  :   1 
brts  :   1 brvc  :   3 brvs  :   3 bset  :   0 bst   :   0 call  :   0 
cbi   :   6 cbr   :   0 clc   :   1 clh   :   0 cli   :   1 cln   :   0 
clr   :  23 cls   :   0 clt   :   2 clv   :   0 clz   :   0 com   :   8 
cp    :   6 cpc   :   7 cpi   :  51 cpse  :   0 dec   :   9 des   :   0 
elpm  :   0 eor   :   5 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 
ijmp  :   0 in    :   1 inc   :   2 jmp   :  36 ld    :  23 ldd   :  65 
ldi   : 130 lds   :  58 lpm   :  14 lsl   :  12 lsr   :   2 mov   :  41 
movw  :  34 mul   :   1 muls  :   0 mulsu :   0 neg   :   4 nop   :   0 
or    :  15 ori   :   6 out   :  17 pop   :  15 push  :  14 rcall :  99 
ret   :  44 reti  :   1 rjmp  :  95 rol   :  21 ror   :  12 sbc   :   8 
sbci  :  11 sbi   :   4 sbic  :   0 sbis  :   1 sbiw  :  19 sbr   :   0 
sbrc  :   2 sbrs  :  11 sec   :   2 seh   :   0 sei   :   1 sen   :   0 
ser   :   8 ses   :   0 set   :   2 sev   :   0 sez   :   0 sleep :   0 
spm   :   0 st    :  59 std   :  30 sts   :  33 sub   :   5 subi  :  20 
swap  :   0 tst   :  18 wdr   :   1 
Instructions used: 74 out of 117 (63.2%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000b8e   2860     98   2958  131072   2.3%
[.dseg] 0x000100 0x00053c      0     60     60    4096   1.5%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 3 warnings
